const Discord = require('discord.js')
const { MessageActionRow, MessageEmbed, MessageSelectMenu } = Discord;
const { tÃ¼rler } = require("../../util/classes");

exports.run = (client, message, args, prefix) => {
    const bag = 'Â» BaÄŸlantÄ±lar:', davet = `[Davet Linki](https://discord.com/api/oauth2/authorize?client_id=${client.user.id}&permissions=8&scope=bot%20applications.commands) & [Destek Sunucusu](https://discord.gg/9cBnKmjzvH)`,
        bilgi = `Bir komut hakkÄ±nda daha fazla almak iÃ§in \`${prefix}yardÄ±m komutadÄ±\` yazÄ±n.`, ornek = `Ã–rneÄŸin \`${prefix}yardÄ±m Ã§eviri\` gibi.`,
        av = client.user.displayAvatarURL(), baslÄ±k = `${client.user.username} â€¢ YardÄ±m menÃ¼sÃ¼`, resim = message.member.displayAvatarURL(), isim = message.author.tag + " tarafÄ±ndan istendi"

    if (!args[0]) {

        const description = { anasayfa: "", ...tÃ¼rler }, embedler = {};

        for (const i in description) description[i] = "";

        for (const [key, value] of client.interactions)
            description.interaction += value.data.type === 1 ? `â€¢ **/${key}**: ${value.data.description}\n`
                : `â€¢ **${key}**: ${value.data.type === 3 ? "Mesaj" : "KullanÄ±cÄ±"} tipi interaction\n`;

        for (const [key, value] of client.commands)
            if (!value.sayi && !value.help.gizli)
                description[value.tur] += `â€¢ **${prefix + key}**: ${value.help.description}\n`;

        const options = [{ label: "Ana Sayfa", description: "Ana sayfa, tÃ¼m kategorilerin listesi", value: "anasayfa", emoji: "ğŸ“–" }, { label: "MesajÄ± sil", description: "YardÄ±m menÃ¼sÃ¼nÃ¼ imha eder!", value: "sil", emoji: "âš " }];

        for (const tÃ¼r in tÃ¼rler) {
            if (tÃ¼r === "sahip") continue;

            description.anasayfa += `Â» ${tÃ¼rler[tÃ¼r].emoji} â€¢ ${tÃ¼rler[tÃ¼r].aciklama}\n`

            options.push(
                {
                    label: tÃ¼rler[tÃ¼r].ad,
                    description: tÃ¼rler[tÃ¼r].aciklama,
                    value: tÃ¼r, emoji: tÃ¼rler[tÃ¼r].emoji
                }
            )

            embedler[tÃ¼r] = new Discord.MessageEmbed().setDescription(description[tÃ¼r])
                .setTitle(`Â» ${tÃ¼rler[tÃ¼r].emoji} ${tÃ¼rler[tÃ¼r].ad} komutlarÄ±:`).setAuthor({ name: baslÄ±k, iconURL: av })
                .setColor(client.renk).setTimestamp().addField(bag, davet).addField(bilgi, ornek)
                .setFooter({ iconURL: resim, text: isim })
        }


        embedler.anasayfa = new Discord.MessageEmbed()
            .setTitle("Â» Ana sayfa").setAuthor({ name: baslÄ±k, iconURL: av })
            .addField(":book: Sayfalar:", description.anasayfa).setFooter({ iconURL: resim, text: isim })
            .addField(':book: Kelime oyunu:', `\`${prefix}kelime\` Kelime oyunu baÅŸlatÄ±r. \`${prefix}kelimedur\` oyunu bitirir.`)
            .setColor(client.renk).setTimestamp().addField(bag, davet).addField(bilgi, ornek)


        message.reply({
            embeds: [embedler.anasayfa], components: [new MessageActionRow().addComponents(new MessageSelectMenu().addOptions(options).setPlaceholder('HakkÄ±nda yardÄ±m almak istediÄŸin kategoriyi seÃ§ebilirsin!').setCustomId("main"))]
        }).then(m => 
            client.on('interactionCreate', interaction => {
                if (!interaction.isSelectMenu() || interaction.message.id !== m.id) return;
                if (interaction.user.id !== message.author.id) return interaction.reply({ content: 'Komutu sen kullanmadÄ±ÄŸÄ±n iÃ§in deÄŸiÅŸtiremezsin.', ephemeral: true })

                interaction.deferUpdate();

                if (interaction.values[0] === "sil")
                    return m.delete()
                else
                    m.edit({ embeds: [embedler[interaction.values[0]]] })

            })
        )
    } else {

        const komut = client.commands.get(args[0].toLowerCase());

        if (komut && !komut.help.gizli) {
           
            const embed = new MessageEmbed()
                .setAuthor({ name: baslÄ±k, iconURL: av })
                .setTitle(`**${prefix + args[0]}** hakkÄ±nda yardÄ±m`)
                .addField("Komut hakkÄ±nda bilgi:", komut.help.description)
                .addField("Komut kullanÄ±mÄ±:", prefix + komut.help.usage)
                .addField("Kategori:", tÃ¼rler[komut.tur].ad)
                .setColor(client.renk)
                .setFooter({ iconURL: resim, text: isim })
            return message.reply({ embeds: [embed] })
        } else {
            const embed = new MessageEmbed().setFooter({ iconURL: resim, text: isim })
                .setAuthor({ name: baslÄ±k, iconURL: av }).setColor(client.renk)
                .setTitle(`Â» BÃ¶yle bir komut bulunamadÄ±, tÃ¼m komutlara eriÅŸmek iÃ§in \`${prefix}yardÄ±m\` yazÄ±n.`)
            return message.reply({ embeds: [embed] })
        }
    }
};

exports.help = {
    name: ['yardÄ±m', "komutlar"],
    description: 'Komutlar hakkÄ±nda bilgi verir.',
    usage: 'yardÄ±m'
};